This is a list of things I'd like to still do while working through these Euler
Problems^^

Remaining ToDo's:
  1) problem 9, slightly more analytical solution isn't completely right yet
  2) Finish the correct, mathematical solution for problem 4 (Newton polynomial? divided differnce?)
  3) Investigate better timing methods/ conventions
  4) Combine popular/ common functions into modules to import
  5) Write a test harness/ script that runs all of these? outputs a log file?
  6) After completing 25 problems go back and review/ tighten up code/ comments
  7) Code up the list comprehensions method for problem 8 (see thread), could learn a bit
  8.) Write up Mayoff's solution for problem number 9 (in thread). Although I'm not sure if that
      matrix is efficient the code used to solve the for cases looks wonderful, short, concise but
      yet abstract and powerful.
  9.) Also Nmadnani's in the next solution, although brute force like mine, uses list comprehensions
      well and would be good practice
  10.) problem 12 has some slightly more optimized solutions. Same flavor though. On some guys page, google it
      

Solved ToDo's:
  1) PROBLEM:
        Problem 3 can be worked on/ there is a major todo in there/ it doesn't work
        for certain numbers (numbers where the multiplicity of the largest prime factor is greater than 1.
     SOLUTION:
        added condition that terminates division loop when divisor is the number itself.
  2) Added timing code to all programs. Still should investigate more timing conventions
